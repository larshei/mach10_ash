defmodule Mach10.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :name, :text, null: false
      add :reference, :text, null: false
      add :avatar_url, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:tracks, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :name, :text, null: false
      add :reference, :text, null: false
      add :header_img_url, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:records, primary_key: false) do
      add :time_ms, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :track_id,
          references(:tracks,
            column: :id,
            name: "records_track_id_fkey",
            type: :bigint,
            prefix: "public"
          ),
          primary_key: true,
          null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "records_user_id_fkey",
            type: :bigint,
            prefix: "public"
          ),
          primary_key: true,
          null: false
    end

    create table(:organizations, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :reference, :text, null: false
      add :name, :text, null: false
      add :logo_url, :text
      add :header_img_url, :text
      add :description, :text
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:history, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :time_ms, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :track_id,
          references(:tracks,
            column: :id,
            name: "history_track_id_fkey",
            type: :bigint,
            prefix: "public"
          )

      add :user_id,
          references(:users,
            column: :id,
            name: "history_user_id_fkey",
            type: :bigint,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:history, "history_user_id_fkey")

    drop constraint(:history, "history_track_id_fkey")

    drop table(:history)

    drop table(:organizations)

    drop constraint(:records, "records_user_id_fkey")

    drop constraint(:records, "records_track_id_fkey")

    drop table(:records)

    drop table(:tracks)

    drop table(:users)
  end
end